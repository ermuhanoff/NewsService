@using Epam.NewsService.Dependencies

@{
    bool isArticlesEmpty = true;
    bool isCommentsEmpty = true;
}

<section class="d-flex p-2 mt-3 justify-content-start">
    <div class="container p-0 m-0 mt-2 pe-2" style="max-width: 20% ; min-width: 190px">
        @RenderPage("~/Views/Partials/_LeftMenuPartial.cshtml")
    </div>
    <div class="container-fluid p-0 m-0 mt-2" style="max-width: 60% ; min-width: 400px">
        @RenderPage("~/Views/Partials/_TopMenuPartial.cshtml")

        @if (Request.Params["category"] != null)
        {
            try
            {
                int id = -1;
                Int32.TryParse(Request.Params["category"], out id);

                <p class="fs-4 py-3">Articles in category '@DependencyResolver.Instance.CategoryLogic.GetCategoryById(id).Title'</p>
            }
            catch
            {
                Response.Redirect("~/Views/Pages/Error");
            }
        }
        @if (Request.Params["id"] == null)
        {
            <ul class="list-group">
                @foreach (var article in PageData["articles"])
                {
                    isArticlesEmpty = false;

                    PageData["article"] = article;

                    <li class="list-group-item border-0 p-0 pb-2">
                        @RenderPage("~/Views/Partials/_ArticlePartial.cshtml")
                    </li>
                }
            </ul>
            if (isArticlesEmpty)
            {
                <p class="d-flex justify-content-center align-items-center fs-4 p-4 text-secondary fw-bold">
                    No articles in this section!
                </p>
            }
        }
        else
        {
            <div class="pb-2">
                @RenderPage("~/Views/Partials/_ArticlePartial.cshtml")
            </div>
            <div class="pb-2">
                @if (User.Identity.IsAuthenticated)
                {
                    <p class="fs-3 pt-4">Article actions</p>
                    <div class="d-flex">
                        <a href="~/Views/Pages/AddArticle" class="btn btn-dark me-3">Edit</a>
                        <a href="~/Actions/RemoveArticle?article=@PageData["article"].Id" class="btn btn-outline-danger">Remove</a>
                    </div>
                    <form action="~/Actions/AddComment?articleId=@PageData["article"].Id" class="needs-validation" method="post" novalidate>
                        <label for="comment-content" class="form-label fs-3 py-4">Add new comment</label>
                        <textarea class="form-control mb-3" id="comment-content" rows="3" value="" required></textarea>
                        <div class="invalid-feedback">
                            Please enter valid comment text!
                        </div>
                        <button class="btn btn-dark comment-send-btn" type="submit">Send</button>
                    </form>
                    <p class="fs-3 py-4">Comments</p>

                    try
                    {
                        foreach (var comment in DependencyResolver.Instance.CommentLogic.GetCommentsByArticleId((int)PageData["article"].Id))
                        {
                            isCommentsEmpty = false;

                            PageData["comment"] = comment;

                            @RenderPage("~/Views/Partials/_CommentPartial.cshtml")
                        }
                    }
                    catch
                    {
                        Response.Redirect("~/Views/Pages/Error");
                    }
                    if (isCommentsEmpty)
                    {
                        <p>No comments on this article</p>
                    }
                }
                else
                {
                    <div class="d-flex justify-content-center align-items-center mt-3">
                        <p class="fs-4">Please <a href="~/Views/Pages/SignIn">SignIn</a> to view and add comments!</p>
                    </div>
                }
            </div>
        }
    </div>
</section>